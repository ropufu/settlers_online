<UserControl x:Class="Ropufu.LeytePond.ArmyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ropufu.LeytePond"
             xmlns:bridge="clr-namespace:Ropufu.LeytePond.Bridge"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             x:Name="self" IsTabStop="False"
             AllowDrop="True" DragEnter="DragEnterHandler" Drop="DropHandler">
    <UserControl.Resources>
        <local:GroupSum x:Key="GroupSum" />
        <local:Logger x:Key="Warnings" />
        <local:StringCollection x:Key="SuggestionsSource" />
        <bridge:Army x:Key="ArmySource" DoSkipEmptySkills="True" />
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="VirtualizingStackPanel">
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="False" />
        </Style>
    </UserControl.Resources>

    <StackPanel Orientation="Vertical" Background="Transparent">
        <!--Text representation-->
        <DockPanel LastChildFill="True">
            <Button DockPanel.Dock="Left" Style='{StaticResource LibraryIcon}' ToolTip="Skills" Click="SkillsHandler" Margin="5,0,0,0" Padding="5" />
            <local:CampBox DockPanel.Dock="Right" ItemsSource="{local:CampDatabaseBinding Path=Camps}" SelectionChanged="CampBoxChangedHandler" Margin="0" Padding="0"
                      SelectedItem="{Binding ElementName=self, Path=Decorator.Camp}"
                      Visibility="{Binding ElementName=self, Path=IsNonPlayerArmy, Converter={StaticResource VisibilityConverter}}">
                <local:CampBox.ToggleButtonStyle>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource FirewallIcon}">
                        <Setter Property="ToolTip" Value="Camp" />
                        <Setter Property="Margin" Value="0,0,5,0" />
                        <Setter Property="Padding" Value="5" />
                    </Style>
                </local:CampBox.ToggleButtonStyle>
                <local:CampBox.Resources>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <ToolTip>
                                    <StackPanel Orientation="Vertical" Margin="5,0,5,0">
                                        <TextBlock>Hit points: <TextBlock Text="{Binding Path=HitPoints}" /></TextBlock>
                                        <TextBlock>Damage reduction: <TextBlock Text="{Binding Path=DamageReduction}" /></TextBlock>
                                    </StackPanel>
                                </ToolTip>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </local:CampBox.Resources>
                <local:CampBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Margin" Value="2,0,2,0" />
                    </Style>
                </local:CampBox.ItemContainerStyle>
                <local:CampBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=FirstName}" Margin="10,2,10,2" />
                    </DataTemplate>
                </local:CampBox.ItemTemplate>
            </local:CampBox>
            <Button DockPanel.Dock="Right" Style='{StaticResource KeyWarningIcon}' Visibility='{Binding Source={StaticResource Warnings}, Path=IsNotEmpty, Converter={StaticResource VisibilityConverter}}' Margin="0,10,10,10" Click="WarningsHandler" />
            <!--Penultimate child: want to make sure long text does not affect width measurement-->
            <TextBox DockPanel.Dock="Top" x:Name="armyStringBox" Text='{Binding ElementName=self, Path=ArmyString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}' TextWrapping="Wrap" Margin="5,10,5,10" Width="{Binding ElementName=modestBorder, Path=ActualWidth}" />
            <!--Last child-->
            <Border x:Name="modestBorder" Margin="10,0,10,0" />
        </DockPanel>
        <!--Visual representation-->
        <ListView x:Name="itemView" KeyboardNavigation.TabNavigation="Cycle" d:DataContext='{d:DesignData Source=Design/ArmyDesign.xaml}' ItemsSource='{Binding}'>
            <ListView.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                    <EventSetter Event="PreviewKeyDown" Handler="ListItemKeyHandler" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold">
                                        <TextBlock Foreground="Maroon" Text="{Binding Path=Unit.NamesString}" />
                                        <TextBlock Text="{Binding Path=Unit.Category}" Margin="10 0 0 0" />
                                    </TextBlock>
                                    <TextBlock>Hit points: <TextBlock Text="{Binding Path=Unit.HitPoints}" /></TextBlock>
                                    <TextBlock>
                                        Damage: <TextBlock Text="{Binding Path=Unit.Damage.Low}" /> / <TextBlock Text="{Binding Path=Unit.Damage.High}" />
                                    </TextBlock>
                                    <TextBlock>Accuracy: <TextBlock Text="{Binding Path=Unit.Damage.Accuracy}" /></TextBlock>
                                    <TextBlock>Splash chance: <TextBlock Text="{Binding Path=Unit.Damage.SplashChance}" /></TextBlock>
                                    <TextBlock>Experience: <TextBlock Text="{Binding Path=Unit.Experience}" /></TextBlock>
                                    <TextBlock Foreground="Maroon">
                                        Initiative: <TextBlock Text="{Binding Path=Unit.AttackPhasesString}" />
                                    </TextBlock>
                                    <TextBlock Foreground="DarkBlue" Text="{Binding Path=Unit.AbilitiesString}" Visibility="{Binding Path=Unit.HasAbilities, Converter={StaticResource VisibilityConverter}}" />
                                    <TextBlock Foreground="DarkBlue" Text="{Binding Path=Unit.TraitsString}" Visibility="{Binding Path=Unit.HasTraits, Converter={StaticResource VisibilityConverter}}" />
                                </StackPanel>
                            </ToolTip>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <DockPanel Margin="5,0,5,0" LastChildFill="True">
                        <Image DockPanel.Dock="Left" Source='{Binding Path=Unit.FirstName, Converter={StaticResource FaceConverter}}' Height="25" Width="25" Margin="0,1,10,1" />
                        <local:GroupCountUpDown DockPanel.Dock="Right" Value='{Binding Path=Count, Mode=TwoWay}' IsCoupled='{Binding Path=IsCoupled, Mode=TwoWay}' Constraint='{StaticResource ResourceKey=GroupSum}' VerticalAlignment="Center" Width="50" Margin="0,2,5,2" />
                        <ContentControl DockPanel.Dock="Right" Style='{StaticResource UnlinkIcon}' Visibility='{Binding Path=IsCoupled, Converter={StaticResource VisibilityConverter}}' Margin="0,1,10,1" />
                        <!--Last child-->
                        <TextBlock Text='{Binding Path=Unit.FirstName}' VerticalAlignment="Center" Height="20" />
                    </DockPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <DockPanel LastChildFill="False">
            <TextBlock DockPanel.Dock="Left" Margin="10,1,10,1">
                <TextBlock Text="Capacity: " />
                <TextBlock Text='{Binding Source={StaticResource ResourceKey=ArmySource}, Path=Capacity}' />
            </TextBlock>
            <TextBlock DockPanel.Dock="Right" Text='{Binding Source={StaticResource ResourceKey=ArmySource}, Path=CountUnits}' Margin="10,1,36,1" />
            <TextBlock DockPanel.Dock="Right" Text="Total: " Margin="10,1,10,1" />
        </DockPanel>

        <!--Known bug: army skills not updated on group count set to zero.-->
        <ItemsControl ItemsSource='{Binding Source={StaticResource ResourceKey=ArmySource}, Path=Skills}'>
            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <ItemsPresenter/>
                </ControlTemplate>
            </ItemsControl.Template>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" Margin="10,10,36,10" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Image DockPanel.Dock="Left" Source='{Binding Converter={StaticResource SkillsConverter}}' Height="16" Width="16" Margin="0,1,10,1">
                        <Image.ToolTip>
                            <TextBlock>
                                <TextBlock Text='{Binding Path=Key, Converter={StaticResource EnumConverter}}' />
                                <TextBlock Text=" (" />
                                <TextBlock Text='{Binding Path=Value}' />
                                <TextBlock Text=")" />
                            </TextBlock>
                        </Image.ToolTip>
                    </Image>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </StackPanel>
</UserControl>
